<?php

namespace App\Http\Controllers\Admin;

use App\Http\Controllers\Controller;
use App\Http\Controllers\Traits\CsvImportTrait;
use App\Http\Controllers\Traits\MediaUploadingTrait;
use App\Http\Requests\MassDestroyTiketRequest;
use App\Http\Requests\StoreTiketRequest;
use App\Http\Requests\UpdateTiketRequest;
use App\Models\Event;
use App\Models\Tiket;
use App\Models\TiketQR;
use App\Models\User;
use Gate;
use Illuminate\Support\Facades\DB;
use Illuminate\Http\Request;
use Spatie\MediaLibrary\MediaCollections\Models\Media;
use Symfony\Component\HttpFoundation\Response;
use Yajra\DataTables\Facades\DataTables;

class TiketController extends Controller
{
    use MediaUploadingTrait;
    use CsvImportTrait;

    public function index(Request $request)
    {
        abort_if(Gate::denies('tiket_access'), Response::HTTP_FORBIDDEN, '403 Forbidden');

        if ($request->ajax()) {
            $query = Tiket::with(['peserta', 'event'])->select(sprintf('%s.*', (new Tiket())->table));
            $table = Datatables::of($query);

            $table->addColumn('placeholder', '&nbsp;');
            $table->addColumn('actions', '&nbsp;');

            $table->editColumn('actions', function ($row) {
                $viewGate = 'tiket_show';
                $editGate = 'tiket_edit';
                $deleteGate = 'tiket_delete';
                $crudRoutePart = 'tikets';

                return view('partials.datatablesActions', compact(
                'viewGate',
                'editGate',
                'deleteGate',
                'crudRoutePart',
                'row'
            ));
            });

            $table->editColumn('id', function ($row) {
                return $row->id ? $row->id : '';
            });
            $table->editColumn('no_tiket', function ($row) {
                return $row->no_tiket ? $row->no_tiket : '';
            });
            $table->addColumn('peserta_email', function ($row) {
                return $row->peserta ? $row->peserta->email : '';
            });

            $table->editColumn('peserta.name', function ($row) {
                return $row->peserta ? (is_string($row->peserta) ? $row->peserta : $row->peserta->name) : '';
            });
            $table->editColumn('checkin', function ($row) {
                return $row->checkin ? Tiket::CHECKIN_SELECT[$row->checkin] : '';
            });
            $table->editColumn('qr', function ($row) {
                return $row->qr ? $row->qr : '';
            });
            $table->editColumn('status', function ($row) {
                return $row->status ? Tiket::STATUS_SELECT[$row->status] : '';
            });
            $table->editColumn('status_payment', function ($row) {
                return $row->status_payment ? Tiket::STATUS_PAYMENT_SELECT[$row->status_payment] : '';
            });
            $table->editColumn('type_payment', function ($row) {
                return $row->type_payment ? Tiket::TYPE_PAYMENT_SELECT[$row->type_payment] : '';
            });
            $table->editColumn('no_hp', function ($row) {
                return $row->no_hp ? $row->no_hp : '';
            });
            $table->editColumn('nama', function ($row) {
                return $row->nama ? $row->nama : '';
            });
            $table->editColumn('nik', function ($row) {
                return $row->nik ? $row->nik : '';
            });
            $table->editColumn('email', function ($row) {
                return $row->email ? $row->email : '';
            });
            $table->addColumn('event_nama_event', function ($row) {
                return $row->event ? $row->event->nama_event : '';
            });

            $table->editColumn('event.event_code', function ($row) {
                return $row->event ? (is_string($row->event) ? $row->event : $row->event->event_code) : '';
            });

            $table->rawColumns(['actions', 'placeholder', 'peserta', 'event']);

            return $table->make(true);
        }

        $users  = User::get();
        $events = Event::get();

        return view('admin.tikets.index', compact('users', 'events'));
    }

    public function create()
    {
        abort_if(Gate::denies('tiket_create'), Response::HTTP_FORBIDDEN, '403 Forbidden');

        $pesertas = User::pluck('email', 'id')->prepend(trans('global.pleaseSelect'), '');

        $events = Event::pluck('nama_event', 'id')->prepend(trans('global.pleaseSelect'), '');

        return view('admin.tikets.create', compact('events', 'pesertas'));
    }

    public function store(StoreTiketRequest $request)
    {
        $tiket = Tiket::create($request->all());

        if ($media = $request->input('ck-media', false)) {
            Media::whereIn('id', $media)->update(['model_id' => $tiket->id]);
        }

        return redirect()->route('admin.tikets.index');
    }

    public function edit(Tiket $tiket)
    {
        abort_if(Gate::denies('tiket_edit'), Response::HTTP_FORBIDDEN, '403 Forbidden');

        $pesertas = User::pluck('email', 'id')->prepend(trans('global.pleaseSelect'), '');

        $events = Event::pluck('nama_event', 'id')->prepend(trans('global.pleaseSelect'), '');

        $tiket->load('peserta', 'event');

        return view('admin.tikets.edit', compact('events', 'pesertas', 'tiket'));
    }

public function anis(){
    // $duplikat = array();
    // $tiket = TiketQR::all();
    $tiket = Tiket::all();
    // $tiket = Tiket::withTrashed()->get();
    // $tiket = DB::table('tikets')
    // ->select('no_tiket', (DB::raw('COUNT(no_tiket)')))
    // ->where('no_tiket','!='
    //     ,'generate')
    // ->groupBy('no_tiket')
    // ->havingRaw('COUNT(no_tiket) > 1')
    // ->get();
    
    foreach($tiket as $t){
        // echo '"';
        // echo $t->no_tiket;
        // echo '",';
        echo "<br>";
        // $duplikat[] = $t->no_tiket;
        
    //     if($t->event_id == 3){
    // $t->update(['checkin' => 'belum']);
    // echo $t->id;echo '<br>';
    
    //     }
    //     if($t->event_id == 1){
    // $t->update(['checkin' => 'terpakai']);
    // echo $t->id;echo '<br>';
    // }
    //     if($t->invoice == 'bdl'){
    // $t->update(['event_id' => 3]);
    // // echo $t->id; echo 3;
    // }
    //   if($t->invoice == 'std1'){
    // $t->update(['event_id' => 1]);
    // // echo $t->id; echo 1;
    // }
    //   if($t->invoice == 'std2'){
    // $t->update(['event_id' => 2]);
    // // echo $t->id; echo 2;
    // }
    
    if($t->invoice == 'bdl'){
    $t->update(['total_bayar' => 300000]);
    echo $t->id; echo 3;
    }
      if($t->invoice == 'std1'){
    $t->update(['total_bayar' => 230000]);
    echo $t->id; echo 1;
    }
      if($t->invoice == 'std2'){
    $t->update(['total_bayar' => 230000]);
    echo $t->id; echo 2;
    }
    
    }
    die;
    // print_r($duplikat);
    
// $duplikat = array(
// "0001",
// "0002",
// "0003",
// "0021",
// "0022",
// "0025",
// "0027",
// "0028",
// "0029",
// "0030",
// "0047",
// "0048",
// "0049",
// "0050",
// "0061",
// "0062",
// "0063",
// "0064",
// "0075",
// "0076",
// "0077",
// "0078",
// "0079",
// "0080",
// "0086",
// "0088",
// "0089",
// "0151",
// "0152",
// "0153",
// "0173",
// "0174",
// "0201",
// "0202",
// "0203",
// "0204",
// "0205",
// "0206",
// "0207",
// "0208",
// "0209",
// "0210",
// "0211",
// "0212",
// "0213",
// "0214",
// "0215",
// "0216",
// "0217",
// "0218",
// "0219",
// "0220",
// "0221",
// "0222",
// "0223",
// "0224",
// "0225",
// "0226",
// "0227",
// "0228",
// "0229",
// "0230",
// "0231",
// "0232",
// "0233",
// "0234",
// "0235",
// "0236",
// "0237",
// "0238",
// "0239",
// "0240",
// "0241",
// "0242",
// "0243",
// "0244",
// "0245",
// "0246",
// "0247",
// "0248",
// "0249",
// "0250",
// "0251",
// "0252",
// "0253",
// "0254",
// "0255",
// "0256",
// "0257",
// "0258",
// "0259",
// "0260",
// "0261",
// "0262",
// "0263",
// "0264",
// "0265",
// "0266",
// "0267",
// "0268",
// "0269",
// "0270",
// "0271",
// "0272",
// "0273",
// "0274",
// "0275",
// "0276",
// "0277",
// "0278",
// "0279",
// "0280",
// "0281",
// "0282",
// "0283",
// "0284",
// "0285",
// "0286",
// "0287",
// "0288",
// "0289",
// "0290",
// "0291",
// "0292",
// "0293",
// "0294",
// "0295",
// "0296",
// "0297",
// "0298",
// "0299",
// "0300",
// "0301",
// "0420",
// "0480",
// "0510",
// "0770",
// "0772",
// "0773",
// "0774",
// "0775",
// "0777",
// "0791",
// "0792",
// "0819",
// "0820",
// "0821",
// "0823",
// "0824",
// "0825",
// "0827",
// "0828",
// "0829",
// "0830",
// "0832",
// "0835",
// "0841",
// "0842",
// "0843",
// "0844",
// "0853",
// "0866",
// "0867",
// "0870",
// "0871",
// "0872",
// "0873",
// "0976",
// "0977",
// "1080",
// "1222",
// "1340",
// "1341",
// "1342",
// "1343",
// "1344",
// "1345",
// "1346",
// "1347",
// "1348",
// "1349",
// "1350",
// "1351",
// "1352",
// "1353",
// "1354",
// "1355",
// "1356",
// "1357",
// "1358",
// "1359",
// "1360",
// "1361",
// "1362",
// "1363",
// "1364",
// "1365",
// "1366",
// "1367",
// "1368",
// "1369",
// "1370",
// "1371",
// "1372",
// "1373",
// "1374",
// "1375",
// "1376",
// "1377",
// "1378",
// "1379",
// "1380",
// "1381",
// "1382",
// "1383",
// "1384",
// "1385",
// "1386",
// "1387",
// "1388",
// "1389",
// "1390",
// "1391",
// "1392",
// "1393",
// "1394",
// "1395",
// "1396",
// "1397",
// "1398",
// "1399",
// "1400",
// "1401",
// "14017",
// "1402",
// "1403",
// "1404",
// "1405",
// "1406",
// "1407",
// "1408",
// "1409",
// "1410",
// "1411",
// "1412",
// "1413",
// "1414",
// "1415",
// "1416",
// "1417",
// "1418",
// "1419",
// "1420",
// "1421",
// "1422",
// "1423",
// "1424",
// "1425",
// "1426",
// "1427",
// "1428",
// "1429",
// "1430",
// "1431",
// "1432",
// "1433",
// "1434",
// "1435",
// "1436",
// "1437",
// "1438",
// "1439",
// "1448",
// "1453",
// "1497",
// "16123",
// "1761",
// "1778",
// "1779",
// "1780",
// "1809",
// "1810",
// "1880",
// "1912",
// "1913",
// "1947",
// "1949",
// "2046",
// "2047",
// "2048",
// "2068",
// "2109",
// "2110",
// "2111",
// "2112",
// "2113",
// "2114",
// "2115",
// "2116",
// "2117",
// "2118",
// "2119",
// "2120",
// "2121",
// "2122",
// "2123",
// "2124",
// "2125",
// "2126",
// "2127",
// "2128",
// "2129",
// "2130",
// "2131",
// "2132",
// "2133",
// "2134",
// "2135",
// "2136",
// "2137",
// "2138",
// "2139",
// "2140",
// "2141",
// "2142",
// "2143",
// "2144",
// "2145",
// "2146",
// "2147",
// "2148",
// "2149",
// "2150",
// "2151",
// "2152",
// "2153",
// "2154",
// "2155",
// "2156",
// "2157",
// "2158",
// "2159",
// "2160",
// "2161",
// "2162",
// "2163",
// "2164",
// "2165",
// "2166",
// "2167",
// "2168",
// "2169",
// "2170",
// "2171",
// "2172",
// "2173",
// "2174",
// "2175",
// "2176",
// "2177",
// "2178",
// "2179",
// "2180",
// "2181",
// "2182",
// "2183",
// "2184",
// "2185",
// "2186",
// "2187",
// "2188",
// "2189",
// "2190",
// "2191",
// "2192",
// "2193",
// "2194",
// "2195",
// "2196",
// "2197",
// "2198",
// "2199",
// "2200",
// "2201",
// "2202",
// "2203",
// "2204",
// "2205",
// "2206",
// "2207",
// "2208",
// "2209",
// "2210",
// "2211",
// "2212",
// "2213",
// "2214",
// "2215",
// "2216",
// "2217",
// "2218",
// "2219",
// "2220",
// "2221",
// "2222",
// "2223",
// "2224",
// "2225",
// "2226",
// "2227",
// "2228",
// "2229",
// "2230",
// "2231",
// "2232",
// "2233",
// "2234",
// "2235",
// "2236",
// "2237",
// "2238",
// "2239",
// "2240",
// "2241",
// "2242",
// "2243",
// "2244",
// "2245",
// "2246",
// "2247",
// "2248",
// "2249",
// "2250",
// "2251",
// "2252",
// "2253",
// "2254",
// "2255",
// "2256",
// "2257",
// "2258",
// "2259",
// "2260",
// "2261",
// "2262",
// "2263",
// "2264",
// "2265",
// "2266",
// "2267",
// "2268",
// "2269",
// "2270",
// "2271",
// "2272",
// "2273",
// "2274",
// "2275",
// "2276",
// "2277",
// "2278",
// "2279",
// "2280",
// "2281",
// "2282",
// "2283",
// "2284",
// "2285",
// "2286",
// "2287",
// "2288",
// "2289",
// "2290",
// "2291",
// "2292",
// "2293",
// "2294",
// "2295",
// "2296",
// "2297",
// "2298",
// "2299",
// "2300",
// "2301",
// "2302",
// "2303",
// "2304",
// "2305",
// "2306",
// "2307",
// "2308",
// "2309",
// "2310",
// "2311",
// "2312",
// "2313",
// "2314",
// "2315",
// "2316",
// "2317",
// "2318",
// "2319",
// "2320",
// "2321",
// "2322",
// "2323",
// "2324",
// "2325",
// "2326",
// "2327",
// "2328",
// "2329",
// "2330",
// "2331",
// "2332",
// "2333",
// "2334",
// "2335",
// "2336",
// "2337",
// "2338",
// "2339",
// "2340",
// "2341",
// "2342",
// "2343",
// "2344",
// "2345",
// "2346",
// "2347",
// "2348",
// "2349",
// "2350",
// "2351",
// "2352",
// "2353",
// "2354",
// "2355",
// "2356",
// "2357",
// "2358",
// "2359",
// "2360",
// "2361",
// "2362",
// "2363",
// "2364",
// "2365",
// "2366",
// "2367",
// "2368",
// "2369",
// "2370",
// "2371",
// "2372",
// "2373",
// "2374",
// "2375",
// "2376",
// "2377",
// "2378",
// "2379",
// "2380",
// "2381",
// "2382",
// "2383",
// "2384",
// "2385",
// "2386",
// "2387",
// "2388",
// "2389",
// "2390",
// "2391",
// "2392",
// "2393",
// "2394",
// "2395",
// "2396",
// "2397",
// "2398",
// "2399",
// "2400",
// "2401",
// "2402",
// "2403",
// "2404",
// "2405",
// "2406",
// "2407",
// "2408",
// "2409",
// "2410",
// "2411",
// "2412",
// "2413",
// "2414",
// "2415",
// "2416",
// "2417",
// "2418",
// "2419",
// "2420",
// "2421",
// "2422",
// "2423",
// "2424",
// "2425",
// "2426",
// "2427",
// "2428",
// "2429",
// "2430",
// "2431",
// "2432",
// "2433",
// "2434",
// "2435",
// "2436",
// "2437",
// "2438",
// "2439",
// "2440",
// "2441",
// "2442",
// "2443",
// "2444",
// "2445",
// "2446",
// "2447",
// "2448",
// "2449",
// "2450",
// "2451",
// "2452",
// "2453",
// "2454",
// "2455",
// "2456",
// "2457",
// "2458",
// "2459",
// "2460",
// "2461",
// "2462",
// "2463",
// "2464",
// "2465",
// "2466",
// "2467",
// "2468",
// "2469",
// "2470",
// "2471",
// "2472",
// "2473",
// "2474",
// "2475",
// "2476",
// "2477",
// "2478",
// "2479",
// "2480",
// "2481",
// "2482",
// "2483",
// "2484",
// "2485",
// "2486",
// "2487",
// "2488",
// "2489",
// "2490",
// "2491",
// "2492",
// "2493",
// "2494",
// "2495",
// "2496",
// "2497",
// "2498",
// "2499",
// "2500",
// "2501",
// "2502",
// "2503",
// "2504",
// "2505",
// "2506",
// "2507",
// "2508",
// "2509",
// "2510",
// "2511",
// "2512",
// "2513",
// "2514",
// "2515",
// "2516",
// "2517",
// "2518",
// "2519",
// "2520",
// "2521",
// "2522",
// "2523",
// "2524",
// "2525",
// "2526",
// "2527",
// "2528",
// "2529",
// "2530",
// "2531",
// "2532",
// "2533",
// "2534",
// "2535",
// "2536",
// "2537",
// "2538",
// "2539",
// "2540",
// "2541",
// "2542",
// "2543",
// "2544",
// "2545",
// "2546",
// "2547",
// "2548",
// "2549",
// "2550",
// "2551",
// "2552",
// "2553",
// "2554",
// "2555",
// "2556",
// "2557",
// "2558",
// "2559",
// "2560",
// "2561",
// "2562",
// "2563",
// "2564",
// "2565",
// "2566",
// "2567",
// "2568",
// "2569",
// "2570",
// "2571",
// "2572",
// "2573",
// "2574",
// "2575",
// "2576",
// "2577",
// "2578",
// "2579",
// "2580",
// "2581",
// "2582",
// "2583",
// "2584",
// "2585",
// "2586",
// "2587",
// "2588",
// "2589",
// "2590",
// "2591",
// "2592",
// "2593",
// "2594",
// "2595",
// "2596",
// "2597",
// "2598",
// "2599",
// "2600",
// "2601",
// "2602",
// "2603",
// "2604",
// "2605",
// "2606",
// "2607",
// "2608",
// "2609",
// "2610",
// "2611",
// "2612",
// "2613",
// "2614",
// "2615",
// "2616",
// "2617",
// "2618",
// "2619",
// "2620",
// "2621",
// "2622",
// "2623",
// "2624",
// "2625",
// "2626",
// "2627",
// "2628",
// "2629",
// "2630",
// "2631",
// "2632",
// "2633",
// "2634",
// "2635",
// "2636",
// "2637",
// "2638",
// "2639",
// "2640",
// "2641",
// "2642",
// "2643",
// "2644",
// "2645",
// "2646",
// "2647",
// "2648",
// "2649",
// "2650",
// "2651",
// "2652",
// "2653",
// "2654",
// "2655",
// "2656",
// "2657",
// "2658",
// "2659",
// "2660",
// "2661",
// "2662",
// "2663",
// "2664",
// "2665",
// "2666",
// "2667",
// "2668",
// "2669",
// "2670",
// "2671",
// "2672",
// "2673",
// "2674",
// "2675",
// "2676",
// "2677",
// "2678",
// "2679",
// "2680",
// "2681",
// "2682",
// "2683",
// "2684",
// "2685",
// "2686",
// "2687",
// "2688",
// "2689",
// "2690",
// "2691",
// "2692",
// "2693",
// "2694",
// "2695",
// "2696",
// "2697",
// "2698",
// "2699",
// "2700",
// "2701",
// "2702",
// "2703",
// "2704",
// "2705",
// "2706",
// "2707",
// "2708",
// "2709",
// "2710",
// "2711",
// "2712",
// "2713",
// "2714",
// "2715",
// "2716",
// "2717",
// "2718",
// "2719",
// "2720",
// "2721",
// "2722",
// "2723",
// "2724",
// "2725",
// "2726",
// "2727",
// "2728",
// "2729",
// "2730",
// "2731",
// "2732",
// "2733",
// "2734",
// "2735",
// "2736",
// "2737",
// "2738",
// "2739",
// "2740",
// "2741",
// "2742",
// "2743",
// "2744",
// "2745",
// "2746",
// "2747",
// "2748",
// "2749",
// "2750",
// "2751",
// "2752",
// "2753",
// "2754",
// "2755",
// "2756",
// "2757",
// "2758",
// "2759",
// "2760",
// "2761",
// "2762",
// "2763",
// "2764",
// "2765",
// "2766",
// "2767",
// "2768",
// "2769",
// "2770",
// "2771",
// "2772",
// "2773",
// "2774",
// "2775",
// "2776",
// "2777",
// "2778",
// "2779",
// "2780",
// "2781",
// "2782",
// "2783",
// "2784",
// "2785",
// "2786",
// "2787",
// "2788",
// "2789",
// "2790",
// "2791",
// "2792",
// "2793",
// "2794",
// "2795",
// "2796",
// "2797",
// "2798",
// "2799",
// "2800",
// "2801",
// "2802",
// "2803",
// "2804",
// "2805",
// "2806",
// "2807",
// "2808",
// "2809",
// "2810",
// "2811",
// "2812",
// "2813",
// "2814",
// "2815",
// "2816",
// "2817",
// "2818",
// "2819",
// "2820",
// "2821",
// "2822",
// "2823",
// "2824",
// "2825",
// "2826",
// "2827",
// "2828",
// "2829",
// "2830",
// "2831",
// "2832",
// "2833",
// "2834",
// "2835",
// "2836",
// "2837",
// "2838",
// "2839",
// "2840",
// "2841",
// "2842",
// "2843",
// "2844",
// "2845",
// "2846",
// "2847",
// "2848",
// "2849",
// "2850",
// "2851",
// "2852",
// "2853",
// "2854",
// "2855",
// "2856",
// "2857",
// "2858",
// "2859",
// "2860",
// "2861",
// "2862",
// "2863",
// "2864",
// "2865",
// "2866",
// "2867",
// "2868",
// "2869",
// "2870",
// "2871",
// "2872",
// "2873",
// "2874",
// "2875",
// "2876",
// "2877",
// "2878",
// "2879",
// "2880",
// "2881",
// "2882",
// "2883",
// "2884",
// "2885",
// "2886",
// "2887",
// "2888",
// "2889",
// "2890",
// "2891",
// "2892",
// "2893",
// "2894",
// "2895",
// "2896",
// "2897",
// "2898",
// "2899",
// "2900",
// "2901",
// "2902",
// "2903",
// "2904",
// "2905",
// "2906",
// "2907",
// "2908",
// "2909",
// "2910",
// "2911",
// "2912",
// "2913",
// "2914",
// "2915",
// "2916",
// "2917",
// "2918",
// "2919",
// "2920",
// "2921",
// "2922",
// "2923",
// "2924",
// "2925",
// "2926",
// "2927",
// "2928",
// "2929",
// "2930",
// "2931",
// "2932",
// "2933",
// "2934",
// "2935",
// "2936",
// "2937",
// "2938",
// "2939",
// "2940",
// "2941",
// "2942",
// "2943",
// "2944",
// "2945",
// "2946",
// "2947",
// "2948",
// "2949",
// "2950",
// "2951",
// "2952",
// "2953",
// "2954",
// "2955",
// "2956",
// "2957",
// "2958",
// "2959",
// "2960",
// "2961",
// "2962",
// "2963",
// "2964",
// "2965",
// "2966",
// "2967",
// "2968",
// "2969",
// "2970",
// "2971",
// "2972",
// "2973",
// "2974",
// "2975",
// "2976",
// "2977",
// "2978",
// "2979",
// "2980",
// "2981",
// "2982",
// "2983",
// "2984",
// "2985",
// "2986",
// "2987",
// "2988",
// "2989",
// "2990",
// "2991",
// "2992",
// "2993",
// "2994",
// "2995",
// "2996",
// "2997",
// "2998",
// "2999",
// "3000",
// "3001",
// "3002",
// "3003",
// "3004",
// "3005",
// "3006",
// "3007",
// "3008",
// "3009",
// "3010",
// "3011",
// "3012",
// "3013",
// "3014",
// "3015",
// "3016",
// "3017",
// "3018",
// "3019",
// "302",
// "3020",
// "3021",
// "3022",
// "3023",
// "3024",
// "3025",
// "3026",
// "3027",
// "3028",
// "3029",
// "303",
// "3030",
// "3031",
// "3032",
// "3033",
// "3034",
// "3035",
// "3036",
// "3037",
// "3038",
// "3039",
// "304",
// "3040",
// "3041",
// "3042",
// "3043",
// "3044",
// "3045",
// "3046",
// "3047",
// "3048",
// "3049",
// "305",
// "3050",
// "3051",
// "3052",
// "3053",
// "3054",
// "3055",
// "3056",
// "3057",
// "3058",
// "3059",
// "306",
// "3060",
// "3061",
// "3062",
// "3063",
// "3064",
// "3065",
// "3066",
// "3067",
// "3068",
// "3069",
// "307",
// "3070",
// "3071",
// "3072",
// "3073",
// "3074",
// "3075",
// "3076",
// "3077",
// "3078",
// "3079",
// "308",
// "3080",
// "3081",
// "3082",
// "3083",
// "3084",
// "3085",
// "3086",
// "3087",
// "3088",
// "3089",
// "309",
// "3090",
// "3091",
// "3092",
// "3093",
// "3094",
// "3095",
// "3096",
// "3097",
// "3098",
// "3099",
// "310",
// "3100",
// "3101",
// "3102",
// "3103",
// "3104",
// "3105",
// "3106",
// "3107",
// "3108",
// "3109",
// "311",
// "3110",
// "3111",
// "3112",
// "3113",
// "3114",
// "3115",
// "3116",
// "3117",
// "3118",
// "3119",
// "312",
// "3120",
// "3121",
// "3122",
// "3123",
// "3124",
// "3125",
// "3126",
// "3127",
// "3128",
// "3129",
// "313",
// "3130",
// "3131",
// "3132",
// "3133",
// "3134",
// "3135",
// "3136",
// "3137",
// "3138",
// "3139",
// "314",
// "3140",
// "3141",
// "3142",
// "3143",
// "3144",
// "3145",
// "3146",
// "3147",
// "3148",
// "3149",
// "315",
// "3150",
// "3151",
// "3152",
// "3153",
// "3154",
// "3155",
// "3156",
// "3157",
// "3158",
// "3159",
// "316",
// "3160",
// "3161",
// "3162",
// "3163",
// "3164",
// "3165",
// "3166",
// "3167",
// "3168",
// "3169",
// "317",
// "3170",
// "3171",
// "3172",
// "3173",
// "3174",
// "3175",
// "3176",
// "3177",
// "3178",
// "3179",
// "318",
// "3180",
// "3181",
// "3182",
// "3183",
// "3184",
// "3185",
// "3186",
// "3187",
// "3188",
// "3189",
// "319",
// "3190",
// "3191",
// "3192",
// "3193",
// "3194",
// "3195",
// "3196",
// "3197",
// "3198",
// "3199",
// "320",
// "3200",
// "3201",
// "3202",
// "3203",
// "3204",
// "3205",
// "3206",
// "3207",
// "3208",
// "3209",
// "321",
// "3210",
// "3211",
// "3212",
// "3213",
// "3214",
// "3215",
// "3216",
// "3217",
// "3218",
// "3219",
// "322",
// "3220",
// "3221",
// "3222",
// "3223",
// "3224",
// "3225",
// "3226",
// "3227",
// "3228",
// "3229",
// "323",
// "3230",
// "3231",
// "3232",
// "3233",
// "3234",
// "3235",
// "3236",
// "3237",
// "3238",
// "3239",
// "324",
// "3240",
// "3241",
// "3242",
// "3243",
// "3244",
// "3245",
// "3246",
// "3247",
// "3248",
// "3249",
// "325",
// "3250",
// "3251",
// "3252",
// "3253",
// "3254",
// "3255",
// "3256",
// "3257",
// "3258",
// "3259",
// "326",
// "3260",
// "3261",
// "3262",
// "3263",
// "3264",
// "3265",
// "3266",
// "3267",
// "3268",
// "3269",
// "327",
// "3270",
// "3271",
// "3272",
// "3273",
// "3274",
// "3275",
// "3276",
// "3277",
// "3278",
// "3279",
// "328",
// "3280",
// "3281",
// "3282",
// "3283",
// "3284",
// "3285",
// "3286",
// "3287",
// "3288",
// "3289",
// "329",
// "3290",
// "3291",
// "3292",
// "3293",
// "3294",
// "3295",
// "3296",
// "3297",
// "3298",
// "3299",
// "330",
// "3300",
// "3301",
// "3302",
// "3303",
// "3304",
// "3305",
// "3306",
// "3307",
// "3308",
// "3309",
// "331",
// "3310",
// "3311",
// "3312",
// "3313",
// "3314",
// "3315",
// "3316",
// "3317",
// "3318",
// "3319",
// "332",
// "3320",
// "3321",
// "3322",
// "3323",
// "3324",
// "3325",
// "3326",
// "3327",
// "3328",
// "3329",
// "333",
// "3330",
// "3331",
// "3332",
// "3333",
// "3334",
// "3335",
// "3336",
// "3337",
// "3338",
// "3339",
// "334",
// "3340",
// "3341",
// "3342",
// "3343",
// "3344",
// "3345",
// "3346",
// "3347",
// "3348",
// "3349",
// "335",
// "3350",
// "3351",
// "3352",
// "3353",
// "3354",
// "3355",
// "3356",
// "3357",
// "3358",
// "3359",
// "336",
// "3360",
// "3361",
// "3362",
// "3363",
// "3364",
// "3365",
// "3366",
// "3367",
// "3368",
// "3369",
// "337",
// "3370",
// "3371",
// "3372",
// "3373",
// "3374",
// "3375",
// "3376",
// "3377",
// "3378",
// "3379",
// "338",
// "3380",
// "3381",
// "3382",
// "3383",
// "3384",
// "3385",
// "3386",
// "3387",
// "3388",
// "3389",
// "339",
// "3390",
// "3391",
// "3392",
// "3393",
// "3394",
// "3395",
// "3396",
// "3397",
// "3398",
// "3399",
// "340",
// "3400",
// "3401",
// "3402",
// "3403",
// "3404",
// "3405",
// "3406",
// "3407",
// "3408",
// "3409",
// "341",
// "3410",
// "3411",
// "3412",
// "3413",
// "3414",
// "3415",
// "3416",
// "3417",
// "3418",
// "3419",
// "342",
// "3420",
// "3421",
// "3422",
// "3423",
// "3424",
// "3425",
// "3426",
// "3427",
// "3428",
// "3429",
// "343",
// "3430",
// "3431",
// "3432",
// "3433",
// "3434",
// "3435",
// "3436",
// "3437",
// "3438",
// "3439",
// "344",
// "3440",
// "3441",
// "3442",
// "3443",
// "3444",
// "3445",
// "3446",
// "3447",
// "3448",
// "3449",
// "345",
// "3450",
// "3451",
// "3452",
// "3453",
// "3454",
// "3455",
// "3456",
// "3457",
// "3458",
// "3459",
// "346",
// "3460",
// "3461",
// "3462",
// "3463",
// "3464",
// "3465",
// "3466",
// "3467",
// "3468",
// "3469",
// "347",
// "3470",
// "3471",
// "3472",
// "3473",
// "3474",
// "3475",
// "3476",
// "3477",
// "3478",
// "3479",
// "348",
// "3480",
// "3481",
// "3482",
// "3483",
// "3484",
// "3485",
// "3486",
// "3487",
// "3488",
// "3489",
// "349",
// "3490",
// "3491",
// "3492",
// "3493",
// "3494",
// "3495",
// "3496",
// "3497",
// "3498",
// "3499",
// "350",
// "3500",
// "3501",
// "3502",
// "3503",
// "3504",
// "3505",
// "3506",
// "3507",
// "3508",
// "3509",
// "351",
// "3510",
// "3511",
// "3512",
// "3513",
// "3514",
// "3515",
// "3516",
// "3517",
// "3518",
// "3519",
// "352",
// "3520",
// "3521",
// "3522",
// "3523",
// "3524",
// "3525",
// "3526",
// "3527",
// "3528",
// "3529",
// "353",
// "3530",
// "3531",
// "3532",
// "3533",
// "3534",
// "3535",
// "3536",
// "3537",
// "3538",
// "3539",
// "354",
// "3540",
// "3541",
// "3542",
// "3543",
// "3544",
// "3545",
// "3546",
// "3547",
// "3548",
// "3549",
// "355",
// "3550",
// "3551",
// "3552",
// "3553",
// "3554",
// "3555",
// "3556",
// "3557",
// "3558",
// "3559",
// "356",
// "3560",
// "3561",
// "3562",
// "3563",
// "3564",
// "3565",
// "3566",
// "3567",
// "3568",
// "3569",
// "357",
// "3570",
// "3571",
// "3572",
// "3573",
// "3574",
// "3575",
// "3576",
// "3577",
// "3578",
// "3579",
// "358",
// "3580",
// "3581",
// "3582",
// "3583",
// "3584",
// "3585",
// "3586",
// "3587",
// "3588",
// "3589",
// "359",
// "3590",
// "3591",
// "3592",
// "3593",
// "3594",
// "3595",
// "3596",
// "3597",
// "3598",
// "3599",
// "360",
// "3600",
// "361",
// "362",
// "363",
// "364",
// "365",
// "366",
// "367",
// "368",
// "369",
// "370",
// "371",
// "372",
// "373",
// "374",
// "375",
// "376",
// "377",
// "378",
// "379",
// "380",
// "381",
// "382",
// "383",
// "384",
// "385",
// "386",
// "387",
// "388",
// "389",
// "390",
// "391",
// "392",
// "393",
// "394",
// "395",
// "396",
// "397",
// "398",
// "399",
// "400",
// "401",
// "7682",
// "7706",
// "7715",
// "7732",
// "7761",);
        
        // $duplikat = array([3304]);
        foreach($duplikat as $l){
            // echo $l;
            // $d = Tiket::all();
            // $d = Tiket::where('no_tiket','=',3304)
            $d = Tiket::where('no_tiket',$l)
            ->withTrashed()
            ->orderBy('id','DESC')
        
        ->get();
        // var_dump($d);
        $n = 0;
        foreach($d as $k){
            echo $n;
            echo "<br>";
            echo $k->id;
            // echo $k->no_tiket;
            echo "<br>";
            if($n > 0){
                
                // $e = Tiket::find($k->id)->update(['updated_at' => date('Y-m-d H:i:s')]);
                
                $e = Tiket::withTrashed()->find($k->id);
                if($e != null){
                // var_dump($e->id);
                // $a = Tiket::find($k->id);
                // echo "<br>";
                if($e->delete()){
                    echo 'a';
                }
                }
            }
            
            if($n == 0){
                $e = Tiket::withTrashed()->where('id',$k->id)->restore();
                // $e = Tiket::find($k->id)->update(['updated_at' => date('Y-m-d H:i:s')]);
                if($e != null){
                    echo 'b';
                }
                // var_dump($e);
                // $e = Tiket::find($k->id);
                // if($e != null){
                //     Tiket::withTrashed()->where('id',$e->id)->
                //     // update(['deleted_at' => null ]);
                //     restore();
                // // 
                // // $a = Tiket::find($k->id);
                // // // echo "<br>";
                // // if($e->restore()){
                //     echo 'b';
                // // }
                // }
                
            }
            
        //     // echo "<br>";
        //     // echo $k->no_tiket;
        //     // echo "<br>";
        //     // var_dump($key);
            
        //     // echo $l;
            
        //     // var_dump($value);
        $n++;
        }
        }
}
    public function update(UpdateTiketRequest $request, Tiket $tiket)
    {
        $tiket->update($request->all());

        return redirect()->route('admin.tikets.index');
    }

    public function show(Tiket $tiket)
    {
        abort_if(Gate::denies('tiket_show'), Response::HTTP_FORBIDDEN, '403 Forbidden');

        $tiket->load('peserta', 'event', 'tiketTransaksis');

        return view('admin.tikets.show', compact('tiket'));
    }

    public function destroy(Tiket $tiket)
    {
        abort_if(Gate::denies('tiket_delete'), Response::HTTP_FORBIDDEN, '403 Forbidden');

        $tiket->delete();

        return back();
    }

    public function massDestroy(MassDestroyTiketRequest $request)
    {
        Tiket::whereIn('id', request('ids'))->delete();

        return response(null, Response::HTTP_NO_CONTENT);
    }

    public function storeCKEditorImages(Request $request)
    {
        abort_if(Gate::denies('tiket_create') && Gate::denies('tiket_edit'), Response::HTTP_FORBIDDEN, '403 Forbidden');

        $model         = new Tiket();
        $model->id     = $request->input('crud_id', 0);
        $model->exists = true;
        $media         = $model->addMediaFromRequest('upload')->toMediaCollection('ck-media');

        return response()->json(['id' => $media->id, 'url' => $media->getUrl()], Response::HTTP_CREATED);
    }
}
